CONDITIONS OF REACT HOOKS
React Hooks Rules

Must begin with use
component name must use PascalCase naming convention
Must be in the function/component body
Cannot call conditionally

useState preserves the value and triggers rerendering?????!

USEEFFECT
useEffect is used for operations outside of the component. Beware when using useEffect and useState together. if you're passing in a value in useState that will cause the browser to rerender, and pass in the useState again, it'll lead to an infinite loop. 
// by default runs after every re-render

// second parameter
-array in useEffect second parameter is called the array of dependencies
if left blank, useEffect will only run on intial rendering 


// cleanup function

CONDITIONAL RENDERING
--Short Circuits
Reacts does not allow if conditions within the jsx, so short circuits  and ternary operator will be mostly used.  
Eg:
text = '';
1. const firstValue = text || 'hello world';
2. const secondValue = text && 'hello world';

  1. if text is falsy (which it is because it's an empty string), evaluation moves to the next value. :: firstValue equals hello world. If text is truthy, the second evaluation will be skipped.

  2. if text is truthy, js evaluates the second value. if text is falsy, js evaluates the first value (text)

CONTROLLED INPUTS
The act of hooking up your inputs to a useState value. 

USEREDUCER
takes two parameters, state and dispatch. State value, dispatch function.